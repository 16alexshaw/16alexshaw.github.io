[{"title":"Java工具类","date":"2018-01-17T11:59:02.416Z","path":"2018/01/17/Java工具类/","text":"日期工具类字符串与日期的转换： 123456789101112131415161718192021222324252627282930import java.text.SimpleDateFormat;import java.util.Date;public class DateUtil &#123; //日期转字符 public static String formatDate(Date date,String format)&#123; String result=&quot;&quot;; SimpleDateFormat sdf=new SimpleDateFormat(format); if(date!=null)&#123; result=sdf.format(date); &#125; return result; &#125; //字符转日期 public static Date formatString(String str,String format) throws Exception&#123; if(StringUtil.isEmpty(str))&#123; return null; &#125; SimpleDateFormat sdf=new SimpleDateFormat(format); return sdf.parse(str); &#125; //获取当前时间 public static String getCurrentDateStr()throws Exception&#123; Date date=new Date(); SimpleDateFormat sdf=new SimpleDateFormat(&quot;yyyyMMddhhmmss&quot;); return sdf.format(date); &#125;&#125; 数据库连接工具类1234567891011121314151617public class DbUtil &#123; //获得连接 public Connection getCon() throws Exception&#123; Class.forName(PropertiesUtil.getValue(&quot;jdbcName&quot;)); Connection con=DriverManager.getConnection(PropertiesUtil.getValue(&quot;dbUrl&quot;), PropertiesUtil.getValue(&quot;dbUserName&quot;), PropertiesUtil.getValue(&quot;dbPassword&quot;)); return con; &#125; //关闭连接 public void closeCon(Connection con)throws Exception&#123; if(con!=null)&#123; con.close(); &#125; &#125; &#125; 加密工具类12345678public class MD5Util &#123; public static String EncoderPwdByMd5(String str) throws NoSuchAlgorithmException, UnsupportedEncodingException&#123; MessageDigest md5=MessageDigest.getInstance(&quot;MD5&quot;); BASE64Encoder base64en=new BASE64Encoder(); return base64en.encode(md5.digest(str.getBytes(&quot;utf-8&quot;))); &#125;&#125; 读取配置文件1234567891011121314public class PropertiesUtil &#123; public static String getValue(String key)&#123; Properties prop=new Properties(); InputStream in=new PropertiesUtil().getClass().getResourceAsStream(&quot;/setting.properties&quot;); try &#123; prop.load(in); &#125; catch (IOException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; return (String)prop.get(key); &#125;&#125; 字符串工具类1234567891011121314151617181920212223242526public class StringUtil &#123; public static boolean isEmpty(String str)&#123; if(str==null || &quot;&quot;.equals(str.trim()))&#123; return true; &#125;else&#123; return false; &#125; &#125; public static boolean isNotEmpty(String str)&#123; if(str!=null &amp;&amp; !&quot;&quot;.equals(str.trim()))&#123; return true; &#125;else&#123; return false; &#125; &#125; public static String formatLike(String str)&#123; if(isNotEmpty(str))&#123; return &quot;%&quot;+str+&quot;%&quot;; &#125;else&#123; return null; &#125; &#125;&#125;","tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Mysql select statement","date":"2018-01-17T11:56:48.632Z","path":"2018/01/17/Mysql-select-statement/","text":"select statement可以从表或视图中查询数据 syntax of the SELECT statement: 1234567891011SELECT column_1, column_2, ...FROM table_1[INNER | LEFT |RIGHT] JOIN table_2 ON conditionsWHERE conditionsGROUP BY column_1HAVING group_conditionsORDER BY column_1LIMIT offset, length; SELECT statement examples： 1234SELECTlastname,firstname,jobtype FROMemployees; 1SELECT * FROM employees; MySQL DISTINCT clause123456SELECT DISTINCT columnsFROM table_nameWHERE where_conditions; MySQL DISTINCT example: 12345SELECT DISTINCTlastname FROMemployeesORDER BY lastname; If a column has NULL values and you use the DISTINCT clause for that column, MySQL keeps one NULL value and eliminates the other. use the DISTINCT clause with more than one column. In this case, MySQL uses the combination of all columns to determine the uniqueness of the row in the result set. 1234567SELECT DISTINCT state, cityFROM customersWHERE state IS NOT NULLORDER BY state , city; use the GROUP BY clause in the SELECT statement without using aggregate functions, the GROUP BY clause behaves like the DISTINCT clause. 123456SELECT stateFROM customersGROUP BY state; use the DISTINCT clause with an aggregate function e.g., SUM, AVG, and COUNT, to remove duplicate rows before MySQL applies the aggregate function to the result set. 123456SELECT COUNT(DISTINCT state)FROM customersWHERE country = &apos;USA&apos;; use the DISTINCT clause with the LIMIT clause, MySQL stops searching immediately when it finds the number of unique rows specified in the LIMIT clause 1234567SELECT DISTINCT stateFROM customersWHERE state IS NOT NULLLIMIT 5; WHERE clauseuse WHERE clause to specify exact rows to select based on particular filter express or condition 123456SELECT lastname,firstname,jobtypeFROM employeesWHERE jobtype=&apos;Sales Rep&apos; AND officeCode = 1; the comparison operators that can use to form filtering expressions in the WHERE clause. Operator Description = Equal to. You can use it with almost any data types. &lt;&gt; or != Not equal to. &lt; Less than. You typically use it with numeric and date/time data types. &gt; Greater than. &lt;= Less than or equal to &gt;= Greater than or equal to Note: some useful operators that you can use in the WHERE clause to form complex conditions:BETWEEN,LIKE,IN,IS NULL. The WHERE clause is used not only with the SELECT statement but also other SQL statements to filter rows such as DELETE and UPDATE.ORDER BY clauseuse the ORDER BY clause to sort the result set 123SELECT column1, column2,...FROM tblORDER BY column1 [ASC|DESC], column2 [ASC|DESC],... ORDER BY sort by an expression example: 12345678910SELECT ordernumber, orderlinenumber, quantityOrdered * priceEach AS subtotalFROM orderdetailsORDER BY ordernumber, orderLineNumber, subtotal; ORDER BY with customer sort order:define custom sort order use FIELD() function 1234567891011SELECT orderNumber, statusFROM ordersORDER BY FIELD(status, &apos;In Process&apos;, &apos;On Hold&apos;, &apos;Cancelled&apos;, &apos;Resolved&apos;, &apos;Disputed&apos;, &apos;Shipped&apos;); Natural Sorting with ORDER BY Clause: 123456SELECT item_noFROM itemsORDER BY CAST(item_no AS UNSIGNED) , item_no; the LENGTH function returns the length of a string12345SELECT item_noFROM itemsORDER BY LENGTH(item_no) , item_no; use the parentheses statement returns the customers who locate in the USA or France and have credit limit greater than 10000: 1234567SELECT customername, country, creditLimitFROM customersWHERE (country = &apos;USA&apos; OR country = &apos;France&apos;) AND creditlimit &gt; 100000; IN OperatorThe IN operator allows you to determine if a specified value matches any one of a list or a subquery: 123456SELECT column1,column2,...FROM table_nameWHERE (expr|column_1) IN (&apos;value1&apos;,&apos;value2&apos;,...); find out the offices that locate in the U.S. and France: 123456SELECT officeCode, city, phone, countryFROM officesWHERE country IN (&apos;USA&apos; , &apos;France&apos;); get offices that do not locate in USA and France, you use NOT IN in the WHERE clause: 123456SELECT officeCode, city, phoneFROM officesWHERE country NOT IN (&apos;USA&apos; , &apos;France&apos;); MySQL IN with subquery: 1234567891011SELECT orderNumber, customerNumber, status, shippedDateFROM ordersWHERE orderNumber IN (SELECT orderNumber FROM orderDetails GROUP BY orderNumber HAVING SUM(quantityOrdered * priceEach) &gt; 60000); BETWEEN Operatoruse the BETWEEN operator in the WHERE clause of the SELECT, INSERT, UPDATE, and DELETE statements: 1expr [NOT] BETWEEN begin_expr AND end_expr; find products whose buy prices are within the ranges of $90 and $100: 123456SELECT productCode, productName, buyPriceFROM productsWHERE buyPrice BETWEEN 90 AND 100; get the orders whose required dates are from 01/01/2003 to 01/31/2003: 1234567SELECT orderNumber, requiredDate, statusFROM ordersWHERE requireddate BETWEEN CAST(&apos;2003-01-01&apos; AS DATE) AND CAST(&apos;2003-01-31&apos; AS DATE);","tags":[{"name":"Mysql","slug":"Mysql","permalink":"http://yoursite.com/tags/Mysql/"}]},{"title":"林夕语录","date":"2018-01-02T02:53:47.000Z","path":"2018/01/02/林夕语录/","text":"让我感谢你，赠我空欢喜 喜悦出于巧合，眼泪何必固执。 与你淡似水,便千杯不醉。 不错过任何挑逗，也不为任何人停留。 你在我旁边 只打了个照面 五月的晴天 闪了电。 就像蝴蝶飞不过沧海，没有谁忍心责怪。 害怕悲剧重演 我的命中命中越美丽的东西我越不可碰。 往事纵不如烟，但时间会把当年的大事缩小，变成哭笑不得的小插曲 没明白么,在乎什么,败在什么。 但知识易得，智慧难求。 要多坚强，才敢念念不忘。 我们都是风雪夜中的赶路人，因相遇摩擦，融化了彼此肩头的雪花，而后因为各自的路线不同，相距越来越远，雪花再覆肩头。 彼岸，没有灯塔，我，依然，张望着。 心灰了还未碎，心死了还在醉。 感谢永远有歌，把心境道破。 总要为想爱的人不想活，才跟该爱的人生活。 我唱出心里话时，眼泪会流，要是怕难过，抱住我手。 当世事再没完美，可远在岁月如歌中找你。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"在路上","date":"2017-12-15T11:32:35.000Z","path":"2017/12/15/在路上/","text":"","tags":[{"name":"游走","slug":"游走","permalink":"http://yoursite.com/tags/游走/"}]},{"title":"hello there","date":"2017-01-15T11:31:08.000Z","path":"2017/01/15/hello-there/","text":"你好这是我的第一篇文章:)","tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"Hello World","date":"2017-01-15T10:10:05.845Z","path":"2017/01/15/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]